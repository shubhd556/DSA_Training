// Problem https://leetcode.com/problems/sort-colors/
    // Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

// Approach 1 : Basic Approach or Brute Force

class Solution {
public:
    void sortColors(vector<int>& nums) {
        for(int i=0;i<nums.size();i++){
            for(int j=0;j<nums.size();j++){
                if(nums[i]<nums[j]){
                    int temp = nums[i];
                    nums[i]=nums[j];
                    nums[j]=temp;
                }
            }
        }
    }
};



// Approach 2 : Optimal Solution

 void sortColors(vector<int>& nums) {
        int low = 0 , mid = 0 , high = nums.size()-1 ; 
        while ( mid <= high )
        {
            switch ( nums[mid] )
            {
                case 0 : swap ( nums[low++] , nums[mid++] ) ;
                    break ; 
                case 1 : mid++ ; 
                    break ; 
                case 2 : swap ( nums[high--] , nums[mid] ) ;
                    break ; 
            }
        }
    }
