//All about Circular Linked list


#include<bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* next;
    node(int val){
        data = val;
        next=NULL;
    }
};

void insertHead(node* &head,int val){
    node* n = new node(val);

    if(head==NULL){
        n->next=n;
        head=n;
        return;
    }
    node* temp=head;

    while(temp->next!=head){
        temp=temp->next;
    }
    temp->next =n;
    n->next=head;
    head=n;
}

void insertTail(node* &head, int val){
    if(head==NULL){
        insertHead(head,val);
    }
    node* n = new node(val);
    node* temp=head;

    while(temp->next!=head){
        temp=temp->next;
    }
    temp->next=n;
    n->next=head;
}

void delhead(node* &head){
    node* temp= head;
    while(temp->next!=head){
        temp=temp->next;
    }
    node* del =head;
    temp->next = head->next;
    head=head->next;

    delete del;
}


void deletion(node*&head,int pos){

    if(pos==1){
        delhead(head);
        return;
    }
    node* temp=head;
    int count=1;
    while(count!=pos){
        temp=temp->next;
        count++;
    }
    node* del = temp->next;
    temp->next=temp->next->next;
    delete del;
}

void display(node* & head){
    node* temp= head;
    do{
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    while(temp!=head);
    cout<<endl;
}

int main() {

    node* head = NULL;
    insertTail(head,1);
    insertTail(head,1);
    insertTail(head,1);
    insertTail(head,1);
    display(head);
    insertHead(head,5);
    display(head);

    return 0;
}