//Problem : https://leetcode.com/problems/majority-element/


//My solution 

int majorityElement(vector<int>& nums) {
        unordered_map<int,int>v;
        int max=0,res=-1;
        for(int i=0;i<nums.size();i++){
            v[nums[i]]++;
        }
        for(auto it:v){
            if(it.second>max){
                res=it.first;
                max=it.second;
            }
        }
        return res;
    }


//Moore Voting Algorithm

int majorityElement(vector<int>& nums) {
        int counter = 0, majority;
        for (int num : nums) {
            if (!counter) {
                majority = num;
            }
            counter += num == majority ? 1 : -1;
        }
        return majority;
    }

//kadane's Algorithm

int majorityElement(vector<int>& nums) {
        int maj_ele=nums[0];
        int count=1;
        for(int i=1;i<nums.size();i++)
        {
            if(maj_ele==nums[i])
                count++;
            else if(count==0)
            {
                maj_ele=nums[i];
                count=1;
            }
            else
                count--;
        }
        return maj_ele;
    }