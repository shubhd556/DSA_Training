//Diameter and height of BT

#include <bits/stdc++.h>
using namespace std;


struct Node
    {
        int data;
        struct Node* left;
        struct Node* right;

        Node(int val){
            data=val;
            left=NULL;
            right=NULL;
        }
    };

int Height(Node* root){
    if(root==NULL){
        return 0;
    }
    int lheight = Height(root->left);
    int rheight = Height(root->right);
    return max(lheight,rheight)+1;
}


int Diameter(Node* root){
    if(root==NULL){
        return 0;
    }
    int lheight = Height(root->left);
    int rheight = Height(root->right);
    int currD = lheight + rheight + 1;

    int lDiameter = Diameter(root->left);
    int rDiameter = Diameter(root->right);

    return max(currD, max(lDiameter,rDiameter));
}


int calcDiameter(Node* root, int* height){
    if(root==NULL){
        *height =0;
        return 0;
    }
    int lh =0, rh =0;
    int lDiameter = calcDiameter(root->left,&lh);
    int rDiamter = calcDiameter(root->right,&rh);

    int currDia = lh+rh+1;
    *height = max(lh,rh)+1;

    return max(currDia,max(lDiameter,rDiamter));
}

int main() {

    struct Node* root = new Node(1);
    root->left = new Node(2);
    root->right= new Node(3);

    root->left->left= new Node(4);
    root->left->right = new Node(5);
    root->right->left= new Node(6);
    root->right->right = new Node(7);

    cout<<Height(root)<<endl;
    cout<<Diameter(root);
    return 0;
}