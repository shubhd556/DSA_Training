//All about Double Linked lists


#include<bits/stdc++.h>
using namespace std;

class node{
    public:
    int data;
    node* next;
    node* prev;
    node(int val){
        data = val;
        next=NULL;
        prev=NULL;
    }
};

void insertHead(node* &head,int val){
    node* n = new node(val);
    n->next=head;
    if(head!=NULL){
        head->prev=n;
    }
   

    head=n;
}
void deletehead(node* &head){
    node* del = head;
    head=head->next;
    head->prev=NULL;
    delete del;
}

void deletion(node* &head,int val){
    node* temp = head;
    int count=1;
    if(val==1){
        deletehead(head);
        return;
    }

    while(temp!=NULL && count!=val){
        temp = temp->next;
        count+=1;
    }
    temp->prev->next=temp->next;

    if(temp->next!=NULL){
        temp->next->prev=temp->prev;
    }
    
    delete temp;

}

void insertTail(node* &head, int val){
    if(head==NULL){
        insertHead(head,val);
        return;
    }

    node* n = new node(val);
    node* temp = head;

    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp ->next=n;
    n->prev=temp;
}

void display(node* head){
    node* temp=head;
    while(temp!=NULL){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
    cout<<endl;
}

int main(){
    node* head=NULL;
    insertTail(head,1);
    insertTail(head,2);
    insertTail(head,3);
    insertTail(head,4);
    display(head);
    insertHead(head,5);
    display(head);
    deletion(head,4);
    display(head);
    return 0;
}